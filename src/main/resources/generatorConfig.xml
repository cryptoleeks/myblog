<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

       
    <context id="default" targetRuntime="Mybatis3">

                <!-- optional，旨在创建class时，对注释进行控制 -->
               
      <!--  <commentGenerator type="generator.MyCommentGenerator">
                        &lt;!&ndash;<property name="suppressDate" value="true"/>&ndash;&gt;
                        &lt;!&ndash;<property name="suppressAllComments" value="true"/>&ndash;&gt;
                   
        </commentGenerator>-->

                <!--配置数据库连接-->
                <!--<jdbcConnection-->
                        <!--driverClass="${jdbc.driverClass}"-->
                        <!--connectionURL="${jdbc.connectionURL}"-->
                        <!--userId="${jdbc.userId}"-->
                        <!--password="${jdbc.password}">-->
                    <!--&lt;!&ndash; 针对oracle数据库 &ndash;&gt;-->
                    <!--&lt;!&ndash;<property name="remarksReporting" value="true"></property>&ndash;&gt;-->
                    <!--&lt;!&ndash; 针对mysql数据库 &ndash;&gt;-->
                    <!--<property name="useInformationSchema" value="true"></property>-->
                <!--</jdbcConnection>-->

                <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
               
        <jdbcConnection
                        driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/myblog"
                        userId="root"
                        password="root">
               
    </jdbcConnection>


            <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
           
    <javaTypeResolver>
                   
        <property name="forceBigDecimals" value="false"/>
               
    </javaTypeResolver>


            <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
            
    <javaModelGenerator targetPackage="cn.loveyx815.blog.entity"
                                targetProject="src/main/java">

                <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
               
    <property name="enableSubPackages" value="false"/>
                <!-- 是否对model添加 构造函数 -->
               
    <property name="constructorBased" value="false"/>
                <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
               
    <property name="trimStrings" value="true"/>
                <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
               
    <property name="immutable" value="false"/>
           
</javaModelGenerator>

                <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
                <sqlMapGenerator targetPackage="mapper"
                                 targetProject="src/main/resources/mapper">
                    <property name="enableSubPackages" value="false"/>
                </sqlMapGenerator>

                <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
                <javaClientGenerator targetPackage="cn.loveyx815.blog.dao"
                                     targetProject="src/main/java" type="XMLMAPPER" >
                    <property name="enableSubPackages" value="false"/>
                </javaClientGenerator>

                <!--
            指定生成的数据表
            tableName：数据库表名称
            domainObjectName：生成的实体类名称
            mapperName：SQL语句的XML文件名称
         -->
                <!--<table tableName="tb_user" domainObjectName="UserEntity" mapperName="UserDao"-->
                       <!--enableCountByExample="false" enableUpdateByExample="false"-->
                       <!--enableDeleteByExample="false" enableSelectByExample="false"-->
                       <!--selectByExampleQueryId="false">-->
                <!--</table>-->

                <table tableName="t_blog" domainObjectName="Blog" mapperName="BlogDao"
                       enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false" enableSelectByExample="false"
                       selectByExampleQueryId="false">
                </table>
<table tableName="t_comment" domainObjectName="Comment" mapperName="CommentDao"
                       enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false" enableSelectByExample="false"
                       selectByExampleQueryId="false">
                </table>
<table tableName="t_lable" domainObjectName="Lable" mapperName="LableDao"
                       enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false" enableSelectByExample="false"
                       selectByExampleQueryId="false">
                </table>
<table tableName="t_message" domainObjectName="Message" mapperName="MessageDao"
                       enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false" enableSelectByExample="false"
                       selectByExampleQueryId="false">
                </table>
<table tableName="t_onecategory" domainObjectName="OneCategory" mapperName="OneCategoryDao"
                       enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false" enableSelectByExample="false"
                       selectByExampleQueryId="false">
                </table>
<table tableName="t_twocategory" domainObjectName="TwoCategory" mapperName="TwoCategoryDao"
                       enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false" enableSelectByExample="false"
                       selectByExampleQueryId="false">
                </table>
<table tableName="t_user" domainObjectName="User" mapperName="UserDao"
                       enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false" enableSelectByExample="false"
                       selectByExampleQueryId="false">
                </table>

            </context>
        </generatorConfiguration>
